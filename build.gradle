buildscript {
    ext {
        springBootVersion = '1.4.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.h2database:h2:1.4.191'
    }
}

plugins {
 //   id "org.flywaydb.flyway" version "4.0.3"
}

//flyway {
//    url = 'jdbc:h2:file:./target/foobar'
 //   user = 'sa'
//}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'testmaker'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
   // compile "org.flywaydb:flyway-core:4.0.3"
    // https://mvnrepository.com/artifact/org.mindrot/jbcrypt
    compile group: 'org.mindrot', name: 'jbcrypt', version: '0.3m'
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-core
   // compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.5.Final'
    // https://mvnrepository.com/artifact/org.webjars/bootstrap
    compile group: 'org.webjars', name: 'bootstrap', version: '3.2.0'
    //compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '1.3.5.RELEASE'
    runtime('mysql:mysql-connector-java')
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate4', version: '2.8.5'
    apply plugin: 'idea'

    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '1.3.0.RELEASE'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.4.4.RELEASE'
    compile("com.bertramlabs.plugins:asset-pipeline-spring-boot:2.12.1")
    assets 'com.craigburke.angular:angular-annotate-asset-pipeline:2.4.1'

}

clientDependencies {

    bower {
        'jquery'('2.2.x', from:'dist') {
            include 'jquery.js'
            include 'jquery.min.js'
        }
        'materialize'('0.97.x', from:'dist', into:'materialize'){
            include "**"
        }

    }

    npm {
        'angular'('1.5.x', into: 'angular') {
            include 'angular.js'
            include 'angular.min.js'
        }
        'angular-resource'('1.5.x', into: 'angular') {
            include 'angular-resource.js'
            include 'angular-resource.min.js'
        }
        'angular-mocks'('1.5.x', into: 'angular') {
            include 'angular-mocks.js'
            include 'angular-mocks.min.js'
        }
        'angular-ui-router'('0.2.18', into: 'angular'){
            include 'angular-ui-router.js'
            include 'angular-ui-router.min.js'
        }
        'angular-animate'('1.5.x', into: 'angular') {
            include 'angular-animate.js'
            include 'angular-animate.min.js'
        }
        'angular-cookies'('1.5.x', into: 'angular') {
            include 'angular-cookies.js'
            include 'angular-cookies.min.js'
        }

    }


}

assets {
    minifyJs = true
    minifyCss = true
    enableSourceMaps = true
    configOptions = [:]

    minifyOptions = [
            languageMode     : 'ES5',
            targetLanguage   : 'ES5', //Can go from ES6 to ES5 for those bleeding edgers
            optimizationLevel: 'SIMPLE',
            angularPass      : true // Can use @ngInject annotation for Angular Apps
    ]

    //includes = []
    excludes = ['**/*.less'] //Example Exclude GLOB pattern

    //for plugin packaging
    packagePlugin = false //set to true if this is a library

}